@{
    ViewData["Title"] = "Spoken Interaction";
    ViewData["RecordingHelp"] = "DIRECTIONS: To begin recording click on the microphone image, speak into your computers microphone, and then click again on the image to stop recording. Once you are finished, click on the download button to download the file.";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>@ViewData["Title"]</h2>
<h3 id="getAudioHelp">@ViewData["RecordingHelp"]</h3>
<h3 id="getTextHelp">"Click on the parse button to see what IBM's Watson&trade; thinks you said, and if it will change something about the website. Click the record button to go back and record another audio track."</h3>
<script src="~/js/audioDisplay.js"></script>
<script src="~/js/recorderjs/recorder.js"></script>
<script src="~/js/receiveAudio.js"></script>
<style>
    html {
        overflow: hidden;
    }

    body {
        font: 14pt Arial, sans-serif;
        background: lightgrey;
        display: flex;
        flex-direction: column;
        height: 100vh;
        width: 100%;
        margin: 0 0;
        z-index: 1;
    }

    h2{
        text-align: center;
    }
    canvas {
        display: inline-block;
        background: #202020;
        width: 95%;
        max-height: 300px;
        box-shadow: 0px 0px 10px blue;
    }

    #controls {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-around;
        height: 20%;
        width: 100%;
    }

    #record {
        height: 15vh;
    }

    #record.recording {
        background: red;
        background: -webkit-radial-gradient(center, ellipse cover, #ff0000 0%,lightgrey 75%,lightgrey 100%,#7db9e8 100%);
        background: -moz-radial-gradient(center, ellipse cover, #ff0000 0%,lightgrey 75%,lightgrey 100%,#7db9e8 100%);
        background: radial-gradient(center, ellipse cover, #ff0000 0%,lightgrey 75%,lightgrey 100%,#7db9e8 100%);
    }

    #save, #save img {
        height: 10vh;
    }

    #save {
        opacity: 0.25;
    }

    #save[download] {
        opacity: 1;
    }

    #viz {
        height: 80%;
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-items: center;
    }
    #getTextHelp{
        display: none;
    }
    #loadingGif{
        display: none;
        z-index: 10;
        float: left;
        clear: both;
        position: absolute;
        top: 40%;
        left: 40%;
    }
    #showRecording{
        display: none;
    }
    #getTextTime{
        display: none;
        /*float: right;*/
        /*clear: left;*/
        position: absolute;
        top: 250px;
        right: 15%;
    }
    #showRecording{
        /*float:left;*/
        /*clear:right;*/
        position: absolute;
        top: 250px;
        left: 15%;
    }
    #showRecording, #getTextTime {
        height: 175px;
        width: 175px;
    }
    #textOutputResult{
        width: inherit;
        padding: 0;
        margin: 0;
        position: absolute;
        top: 450px;
        left: 30%;
        text-align:center;
    }
    button{
        border: 1px solid #202020;
        border-radius: 10px;
    }
    button:hover{
        -webkit-box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);
        -moz-box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);
        box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);
    }
    button:active{
        -webkit-box-shadow: inset 0px 0px 28px 0px rgba(0,0,0,0.75);
        -moz-box-shadow: inset 0px 0px 28px 0px rgba(0,0,0,0.75);
        box-shadow: inset 0px 0px 28px 0px rgba(0,0,0,0.75);
    }
    #appContent{
        min-height: 600px;
    }
</style>
<div id="appContent">
    <div><button id="showRecording">Record</button></div>
    <div id="viz">
        <canvas id="analyser" width="1024" height="500"></canvas>
        <canvas id="wavedisplay" width="1024" height="500"></canvas>
    </div>
    <div id="controls">
        <img id="record" src="~/images/mic128.png" onclick="toggleRecording(this);">
        <a id="save" href="#"><img src="~/images/save.svg"></a>
    </div>

    <div><button id="getTextTime">Parse</button></div>
    <img id="loadingGif" src="~/images/loadingGif.gif" />
    <div id="textOutputResult"></div>
</div>

